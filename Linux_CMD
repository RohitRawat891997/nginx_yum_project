


Hereâ€™s a summary of the steps taken during your Nginx project setup based on the command history:

### 1. Installing Nginx
   - Installed Nginx using `yum install nginx -y`.
   - Started and enabled the Nginx service with:
     - `systemctl restart nginx`
     - `systemctl enable nginx`

### 2. **Nginx Configuration**
   - Edited the main configuration file: `/etc/nginx/nginx.conf` using `vim /etc/nginx/nginx.conf`.
   - Backed up the original configuration file with `cp nginx.conf nginx.conf_backup`.
   - Cleared the file with `> nginx.conf` and re-edited it multiple times.
   - Tested the configuration with `nginx -t` to ensure syntax correctness.

### 3. **Serving Web Pages**
   - Moved into the directory `/usr/share/nginx/html` where the default HTML files are located.
   - Removed existing files with `rm -rf *`.
   - Created a new directory structure for the site (e.g., `mkdir example.com`, `mkdir about`).
   - Moved `index.html` to `example.com/`, edited it, and copied it into the `about` directory.
   - Edited and added content to `index.html` and `styles.css` in the `/about/` directory.
   - Ensured correct directory structure for serving content and confirmed files with `ls`.

### 4. **Restarting and Reloading Nginx**
   - Restarted Nginx after changes using `systemctl restart nginx` or `systemctl reload nginx.service` as required.
   - Ran `nginx -t` before and after changes to check for syntax issues.

### 5. **Log File Management**
   - Created log files specifically for the site with:
     - `touch /var/log/nginx/about.com_error.log`
     - `touch /var/log/nginx/about.com_access.log`
   - Examined logs using `cat` commands and removed/recreated them when necessary.

### 6. **SSL Certificate Installation**
   - Installed Certbot and the necessary dependencies using:
     - `yum install certbot python3-certbot-nginx -y`
   - Stopped Nginx service with `systemctl stop nginx`.
   - Obtained SSL certificates for the site using Certbot with the `--standalone` option, for both IP and domain (e.g., `certbot certonly --standalone -d ur-voip.com`).
   - Restarted the Nginx service after SSL installation.

### 7. **Final Configuration Checks**
   - Continuously edited and verified the Nginx configuration file.
   - Ensured configuration correctness and reloaded Nginx service after any significant changes.

### 8. **Error Handling**
   - Regularly checked logs for any errors or access issues by using `cat` and `ls` commands on the log files.
   - Restored configurations from backups when necessary.

### Summary of Key Commands:
- **Installation & Setup:** `yum install nginx`, `systemctl restart nginx`, `systemctl enable nginx`
- **File Operations:** `cp`, `mv`, `rm -rf`, `ls`, `vim`
- **Nginx Testing:** `nginx -t`, `systemctl restart nginx`, `systemctl reload nginx`
- **SSL Setup:** `certbot certonly --standalone -d <domain>`
- **Log Management:** `touch`, `cat`, `rm -rf`

These steps outline the process of configuring Nginx on a Linux server, serving web content, managing logs, and securing the site with SSL.
